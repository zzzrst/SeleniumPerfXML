<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SeleniumPerfXML</name>
    </assembly>
    <members>
        <member name="T:SeleniumPerfXML.Axe.AxeDriver">
            <summary>
            This is the driver to deal with Axe.core.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeDriver.results">
            <summary>
            Result Type -> { Rule ID -> {Page URL -> HTML, Target, Data, Related Nodes} }.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeDriver.pageInfo">
            <summary>
            Page URL -> Provided Page Title, Browser Page Title.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeDriver.ruleInfo">
            <summary>
            Rule ID -> Description, Rule Tag, Impact, Help, Help URL.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeDriver.pageSummary">
            <summary>
            [Page URL, Provided Page Title, Browser Page Title, Passes, Violations, Incomplete, Inapplicable].
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.Axe.AxeDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SeleniumPerfXML.Axe.AxeDriver"/> class.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.Axe.AxeDriver.CaptureResult(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            This captures the AODA result for this webpage.
            </summary>
            <param name="driver">Selenium WebDriver used. </param>
            <param name="providedPageTitle"> Title of the page. </param>
        </member>
        <member name="M:SeleniumPerfXML.Axe.AxeDriver.LogResults(System.String)">
            <summary>
            Logs the result for this file.
            </summary>
            <param name="folderLocation">Location to save all the results.</param>
        </member>
        <member name="M:SeleniumPerfXML.Axe.AxeDriver.MapAxeResult(Selenium.Axe.AxeResultItem[],System.String,System.String)">
            <summary>
            Populate RuleInfo and Results based on AxeResultItems[] passed in.
            </summary>
            <param name="axeResults">The different results that were found.</param>
            <param name="resultType"> The type of result. </param>
            <param name="url">The url used for this page.</param>
        </member>
        <member name="T:SeleniumPerfXML.Axe.AxeResultType">
            <summary>
            The different result types for Axe.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeResultType.INAPPLICABLE">
            <summary>
            The result type INAPPLICABLE.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeResultType.INCOMPLETE">
            <summary>
            The result type INCOMPLETE.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeResultType.PASS">
            <summary>
            The result type PASS.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.Axe.AxeResultType.VIOLATIONS">
            <summary>
            The result type VIOLATIONS.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.Axe.PageInformation">
            <summary>
            Class to represent information on a page.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.PageInformation.BrowserPageTitle">
            <summary>
            Gets or sets the title found on the page the browser is on..
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.PageInformation.ProvidedPageTitle">
            <summary>
            Gets or sets the title provided by the user for the page.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.Axe.RuleInformation">
            <summary>
            Class to represent the information for each rule.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleInformation.Description">
            <summary>
            Gets or sets the description of the rule.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleInformation.Help">
            <summary>
            Gets or sets the help text for this rule.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleInformation.HelpUrl">
            <summary>
            Gets or sets the help url associated with this rule.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleInformation.Impact">
            <summary>
            Gets or sets the impact associated with this rule.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleInformation.RuleTag">
            <summary>
            Gets or sets the rule tag associated with this rule.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.Axe.RuleNodeInformation">
            <summary>
            Class to represent the information on a rule node.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleNodeInformation.HTML">
            <summary>
            Gets or sets the HTML element this rule pertains to.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.Axe.RuleNodeInformation.Target">
            <summary>
            Gets or sets the list of target HTML elements / information this rule has.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.CSVLogger">
            <summary>
            Logger class for CSV.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.CSVLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SeleniumPerfXML.CSVLogger"/> class.
            </summary>
            <param name="csvSaveFileLocation">The location to save the csv file.</param>
        </member>
        <member name="P:SeleniumPerfXML.CSVLogger.CsvSaveFileLocation">
            <summary>
            Gets or sets the csv save file location.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.CSVLogger.AddResults(System.String)">
            <summary>
            Saves the results to be written to the CSV.
            </summary>
            <param name="result"> The result to be written to the csv. </param>
        </member>
        <member name="M:SeleniumPerfXML.CSVLogger.WriteOutResults">
            <summary>
            Writes to the CSV file for the accumulated results saved.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.CSVLogger.IsFileReady(System.String)">
            <summary>
            Checks if the file is ready before attempting to write to it.
            </summary>
            <param name="filename">The name of the file to write to.</param>
            <returns><code>true</code> if the file is ready. </returns>
        </member>
        <member name="T:SeleniumPerfXML.Logger">
            <summary>
            Logger class to be used. \n
            Reference 1: https://stackify.com/log4net-guide-dotnet-logging/ \n
            Reference 2: https://www.dotnetdepth.in/2018/06/how-to-use-log4net-in-net-core-20.html.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.Logger.Debug(System.Object)">
            <summary>
            Allows the user to log a debug message.
            </summary>
            <param name="message">The debug message to be logged.</param>
        </member>
        <member name="M:SeleniumPerfXML.Logger.Error(System.Object)">
            <summary>
            Allows the user to log an error message.
            </summary>
            <param name="message">The error message to be logged.</param>
        </member>
        <member name="M:SeleniumPerfXML.Logger.Fatal(System.Object)">
            <summary>
            Allows the user to log a fatal message.
            </summary>
            <param name="message">The fatal message to be logged.</param>
        </member>
        <member name="M:SeleniumPerfXML.Logger.Info(System.Object)">
            <summary>
            Allows the user to log an info message.
            </summary>
            <param name="message">The info message to be logged.</param>
        </member>
        <member name="M:SeleniumPerfXML.Logger.Warn(System.Object)">
            <summary>
            Allows the user to log a warning message.
            </summary>
            <param name="message">The warning message to be logged.</param>
        </member>
        <member name="M:SeleniumPerfXML.Logger.GetLogger(System.Type)">
            <summary>
            Returns the type for the logger.
            </summary>
            <param name="type">Class this logger is under.</param>
            <returns>ILog instance to interact with.</returns>
        </member>
        <member name="M:SeleniumPerfXML.Logger.SetLog4NetConfiguration">
            <summary>
            Sets up the Log4Net Configuration.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.SeleniumDriver">
            <summary>
            Driver class for Selenium WebDriver.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.seleniumDriverLocation">
            <summary>
            Location of the Selenium drivers on the current machine.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.#ctor(SeleniumPerfXML.SeleniumDriver.Browser,System.TimeSpan,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SeleniumPerfXML.SeleniumDriver"/> class.
            </summary>
            <param name="browserType">The browser to use for this driver. </param>
            <param name="timeOutThreshold"> The timeout threshold in seconds.</param>
            <param name="environment"> The environment set. </param>
            <param name="url"> The url set. </param>
            <param name="screenshotSaveLocation"> Location to save screenshots when it fails.</param>
        </member>
        <member name="T:SeleniumPerfXML.SeleniumDriver.Browser">
            <summary>
            Different browsers that are supported.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.Browser.Chrome">
            <summary>
            Represents the Chrome browser.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.Browser.Edge">
            <summary>
            Represents the Microsoft Edge Browser.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.Browser.Firefox">
            <summary>
            Represents the Firefox Browser.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.Browser.IE">
            <summary>
            Represents the Internet Explorer browser.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.Browser.Safari">
            <summary>
            Represents the Safari Browser.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.SeleniumDriver.ElementState">
            <summary>
            Different states of the element.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.ElementState.Invisible">
            <summary>
            Element cannot be found / seen.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.ElementState.Visible">
            <summary>
            Element can be seen.
            </summary>
        </member>
        <member name="F:SeleniumPerfXML.SeleniumDriver.ElementState.Clickable">
            <summary>
            Element can be clicked.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumDriver.CurrentURL">
            <summary>
            Gets the url of the page the webdriver is focued on.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumDriver.LoadingSpinner">
            <summary>
            Gets or sets the loadiong spinner that appears on the website.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumDriver.ErrorContainer">
            <summary>
            Gets or sets the error container to check if any errors are shown on the UI.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumDriver.InIFrame">
            <summary>
            Gets or sets a value indicating whether the web driver is in an IFrame or not.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.CheckForElementState(System.String,SeleniumPerfXML.SeleniumDriver.ElementState)">
            <summary>
            Checks for an element state.
            </summary>
            <param name="xPath"> The xpath to find the web element. </param>
            <param name="state"> The state of the web element to wait for. </param>
            <returns> If the element state is as wanted.</returns>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.ClickElement(System.String,System.Boolean)">
            <summary>
            Performs the actions of clicking the specified element. Uses Selenium binding by default.
            </summary>
            <param name="xPath">The xpath to find the specified element.</param>
            <param name="byJS"> Whether to use JS to perform the click / not. </param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.CloseBrowser">
            <summary>
            Closes the current window. It will quite the browser if it is the last window opened.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.Quit">
            <summary>
            Quits the webdriver. Call this when you want the driver to be closed.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.GenerateAODAResults(System.String)">
            <summary>
            Generates the AODA results.
            </summary>
            <param name="folderLocation"> The folder to generate AODA results in. </param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.NavigateToURL(System.String)">
            <summary>
            Tells the browser to navigate to the provided url.
            </summary>
            <param name="url">URL for the browser to navigate to.</param>
            <returns> <code>true</code> if the navigation was successful. </returns>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.PopulateElement(System.String,System.String)">
            <summary>
            Performs the action of populating a value.
            </summary>
            <param name="xPath"> The xpath to use to identify the element. </param>
            <param name="value"> The value to populate.</param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.RefreshWebPage">
            <summary>
            Refreshes the webpage.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.RunAODA(System.String)">
            <summary>
            Method to run aoda on the current web page.
            </summary>
            <param name="providedPageTitle"> Title of the web page the user provides. </param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.SelectValueInElement(System.String,System.String)">
            <summary>
            Performs the action of selecting a value in an element.
            </summary>
            <param name="xPath"> The xpath to use to identify the element. </param>
            <param name="value"> The value to select in the element.</param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.SwitchToIFrame(System.String)">
            <summary>
            Switches to appropriate IFrame.
            </summary>
            <param name="xPath"> xPath to find the iFrame.</param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.SwitchToTab(System.Int32)">
            <summary>
            The SwitchToTab.
            </summary>
            <param name="tab">The tab<see cref="T:System.Int32"/>.</param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.TakeScreenShot">
            <summary>
            Takes a screenshot of the browser. Screenshot will have the datestamp as its name. Year Month Date Hour Minutes Seconds (AM/PM).
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.WaitForElementState(System.String,SeleniumPerfXML.SeleniumDriver.ElementState)">
            <summary>
            Waits for an element state.
            </summary>
            <param name="xPath"> The xpath to find the web element. </param>
            <param name="state"> The state of the web element to wait for. </param>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.WaitForLoadingSpinner">
            <summary>
            Waits until the loading spinner disappears.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.CheckErrorContainer">
            <summary>
            Checks if there are any errors in the error container.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.GetElementByXPath(System.String)">
            <summary>
            Finds the first IWebElement By XPath.
            </summary>
            <param name="xPath">The xpath to find the web element.</param>
            <returns> The first IWebElement whose xpath matches. </returns>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.GetElementByXPath(System.String,System.Int32)">
            <summary>
            Finds the first IWebElement By XPath.
            </summary>
            <param name="xPath">The xpath to find the web element.</param>
            <param name="tries"> The amount in seconds to wait for.</param>
            <returns> The first IWebElement whose xpath matches. </returns>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumDriver.SetActiveTab">
            <summary>
            Sets the tab to be the active one.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.SeleniumPerfXMLDriver">
            <summary>
            Driver class.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.SeleniumPerfXMLDriver.Main(System.String[])">
            <summary>
            Main functionality.
            </summary>
            <param name="args"> The arguments to be passed in. </param>
            <returns> 0 if no errors were met. </returns>
        </member>
        <member name="T:SeleniumPerfXML.SeleniumPerfXMLOptions">
            <summary>
            This class stores the command line arguments that are taken in, both mandatory and optional.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.Examples">
            <summary>
            Gets usage for SeleniumPerfXML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.Browser">
            <summary>
            Gets or sets the browser set in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.Environment">
            <summary>
            Gets or sets the environment set in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.URL">
            <summary>
            Gets or sets the URL set in the XML. By default, the URL is derived by the environment provided.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.RespectRepeatFor">
            <summary>
            Gets or sets a value indicating whether to respect RespectRepeatFor flag in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.RespectRunAodaFlag">
            <summary>
            Gets or sets a value indicating whether to respect RunAODAFlag in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.TimeOutThreshold">
            <summary>
            Gets or sets the timeout threshold in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.WarningThreshold">
            <summary>
            Gets or sets the warning threshold in the XML. Warning must be less than Timeout.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.DataFile">
            <summary>
            Gets or sets the datafile in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.CSVSaveFileLocation">
            <summary>
            Gets or sets the CSV file location in the XML.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.LogSaveLocation">
            <summary>
            Gets or sets the log save location in the XML.
            <para> </para>
            If not set, will use the directory path of CSVSaveFileLocation.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.ScreenShotSaveLocation">
            <summary>
            Gets or sets the screenshot save location in the XML.
            <para> </para>
            If not set, will use the directory path of CSVSaveFileLocation.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.SeleniumPerfXMLOptions.XMLFile">
            <summary>
            Gets or sets the screenshot save location in the XML.
            <para> </para>
            If not set, will use the directory path of CSVSaveFileLocation.
            </summary>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.ChooseCollection">
            <summary>
            This class executes the action of getting to an organization.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.ChooseCollection.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.ChooseCollection.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.ClickElementByXPath">
            <summary>
            This class executes the action of clicking an element by xpath.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.ClickElementByXPath.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.ClickElementByXPath.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.CloseBrowser">
            <summary>
            This class executes the action of closing the browser.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.CloseBrowser.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.CloseBrowser.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.CloseTab">
            <summary>
            This class executes the action of closing the current tab.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.CloseTab.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.CloseTab.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.DDLSelectByXPath">
            <summary>
            This class executes the action of selecting a value from the specified dropdownlist.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.DDLSelectByXPath.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.DDLSelectByXPath.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.OpenBrowser">
            <summary>
            This class executes the action of opening the browser to the specified site.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.OpenBrowser.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.OpenBrowser.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.PopulateElementByXPath">
            <summary>
            This class executes the action of populating the element identified by the xpath.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.PopulateElementByXPath.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.PopulateElementByXPath.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.SignIn">
            <summary>
            This class executes the action of signing in.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.SignIn.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.SignIn.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.SwitchIntoIFrame">
            <summary>
            This class executes the action of switching context into IFrame.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.SwitchIntoIFrame.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.SwitchIntoIFrame.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.SwitchToTab">
            <summary>
            This class executes the action of switching to tab x.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.SwitchToTab.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.SwitchToTab.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.WaitForElement">
            <summary>
            This class executes the action of waiting for an elment's status.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.WaitForElement.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.WaitForElement.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.WaitInSeconds">
            <summary>
            This class executes the action of waiting for x seconds.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.WaitInSeconds.Description">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.WaitInSeconds.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.ReflectiveGetter">
            <summary>
            Class to get test action using reflection.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.ReflectiveGetter.GetEnumerableOfType``1(System.Object[])">
            <summary>
            Gets a list of all subclasses of base class T using reflection.
            </summary>
            <typeparam name="T">The generic type T to be used.</typeparam>
            <param name="constructorArgs">The constructorArgs<see cref="T:object[]"/>.</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/> found.</returns>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.TestAction">
            <summary>
            Abstract class for Test Actions to be implemented.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestActions.TestAction.Description">
            <summary>
            Gets or sets the Description
            Description mandatory set EXACTLY to test actions set in XML in child classes for reflection to work.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.TestAction.Execute(System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.Xml.XmlNode,SeleniumPerfXML.SeleniumDriver,SeleniumPerfXML.CSVLogger)">
            <summary>
            Executes the test action based on the provided information and settings.
            </summary>
            <param name="log"> Indicates whether to log this test case or not.</param>
            <param name="name"> The test step name for this action. </param>
            <param name="performAction"> Indicates whether to perform this action or not.</param>
            <param name="runAODA"> Indicates whether to run AODA scripts after this action. </param>
            <param name="runAODAPageName"> Indicates the page name to pass to AODA scripts. </param>
            <param name="testActionInformation"> Provides the XML information for this test action. </param>
            <param name="seleniumDriver"> Passes on the driver instance used to interact with the browser. </param>
            <param name="csvLogger"> Passes on the csv logger used to log results. </param>
            <returns>0 if pass. 1 if fail.</returns>
        </member>
        <member name="T:SeleniumPerfXML.TestActions.TimeAndLogAspect">
            <summary>
            This aspect is used to surround a test action with try and catch, while timing each action.
            If the test action is successful (no errors performing the action / passed in not to perform action), then runAODA if specified.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.TimeAndLogAspect.OnEntry(MethodBoundaryAspect.Fody.Attributes.MethodExecutionArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.TimeAndLogAspect.OnException(MethodBoundaryAspect.Fody.Attributes.MethodExecutionArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SeleniumPerfXML.TestActions.TimeAndLogAspect.OnExit(MethodBoundaryAspect.Fody.Attributes.MethodExecutionArgs)">
            <inheritdoc/>
        </member>
        <member name="T:SeleniumPerfXML.TestDataXMLParser">
            <summary>
            XMLParser that reads the XML passed in to create proper data structurs.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SeleniumPerfXML.TestDataXMLParser"/> class.
            </summary>
            <param name="xmlFile"> The file path to the XML file.</param>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.Browser">
            <summary>
            Gets or sets the browser to use in this test.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.Environment">
            <summary>
            Gets or sets the environment to go to.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.URL">
            <summary>
            Gets or sets the URL the browser should land on first.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.PassedInRespectRunAODAFlag">
            <summary>
            Gets or sets the passed in respectRunAODAFlag parameter.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.PassedInRespectRepeatFor">
            <summary>
            Gets or sets the passed in respectRepeatFor parameter.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.TimeOutThreshold">
            <summary>
            Gets or sets the timeout threshold.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.WarningThreshold">
            <summary>
            Gets or sets the warning threshold. Note that the warning threshold should be less than the timeout threshold.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.DataFile">
            <summary>
            Gets or sets the file path to the data file.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.CsvSaveFileLocation">
            <summary>
            Gets or sets the csv save file location.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.LogSaveFileLocation">
            <summary>
            Gets or sets the log save file location.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.ScreenshotSaveLocation">
            <summary>
            Gets or sets the screenshot save location.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.XMLFile">
            <summary>
            Gets or sets the XML file.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.RespectRunAODAFlag">
            <summary>
            Gets or sets a value indicating whether to respectRunAODAFlag or not.
            </summary>
        </member>
        <member name="P:SeleniumPerfXML.TestDataXMLParser.RespectRepeatFor">
            <summary>
            Gets or sets a value indicating whether to respectRepeatFor or not.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.RunTestCaseFlow">
            <summary>
            This function parses the test case flow and starts executing.
            </summary>
            <returns> 0 if pass. >=1 if error.</returns>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.ParseParameters">
            <summary>
            This function is responsible for parsing parameters in the XML File and updating variables if not overriden.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.ParseSpecialElements">
            <summary>
            This function is responsible for parsing the special elements in the XML File and updating variables if not overriden.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.InstantiateSeleniumDriver">
            <summary>
            Instantiates the selenim driver to be used in this test run.
            </summary>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.FindAndRunTestCase(System.String,System.Boolean)">
            <summary>
            Runs the test case based on the provided ID.
            </summary>
            <param name="testCaseID">ID to find the testcase to run.</param>
            <param name="performAction"> Perfoms the action. </param>
            <returns> 0 if pass. >=1 if fail.</returns>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.RunTestCase(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Runs the test case based on the provided XMLNode.
            </summary>
            <param name="testCase"> Optional XmlNode to represent testCases. </param>
            <param name="performAction"> Performs the action. </param>
            <returns>0 if pass. >=1 if not pass.</returns>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.RunIfTestCase(System.Xml.XmlNode,System.Boolean)">
            <summary>
            This function parses the if test case flow and starts executing.
            </summary>
            <param name="ifXMLNode"> XML Node that has the if block. </param>
            <param name="performAction"> Perfoms the action. </param>
            <returns>0 if pass. >=1 if fail.</returns>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.FindAndRunTestStep(System.String,System.Boolean)">
            <summary>
            This function will go through the list of steps and run the appropriate test step if found.
            </summary>
            <param name="testStepID"> The ID of the test step to run. </param>
            <param name="performAction"> Perfoms the action. </param>
            <returns>0 if pass. >=1 if fail.</returns>
        </member>
        <member name="M:SeleniumPerfXML.TestDataXMLParser.ReplaceIfToken(System.String)">
            <summary>
            Replaces a string if it is a token and shown.
            </summary>
            <param name="possibleToken">A string that may be a token.</param>
            <returns>The provided string or value of the token.</returns>
        </member>
    </members>
</doc>
